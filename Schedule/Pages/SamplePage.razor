@page "/SamplePage"
@using Schedule.Application.DataAggregation
@using Schedule.Application.Wrappers
@using Schedule.Domain.DisplayObjects.DateRange
@using Schedule.Domain.DisplayObjects.ScheduleData
@inject IWebScrapper WebScrapper
<h3>SamplePage</h3>

<MudButton OnClick="GetDates" Variant="Variant.Outlined" Color="Color.Secondary">GetDates</MudButton>

@if (DataDtos is not null)
{
    <MudExpansionPanels MultiExpansion="true" Elevation="3">
        @foreach (var dto in DataDtos)
        {
            <MudExpansionPanel Text="@(dto.From.ToString())" ExpandedChanged="ExpandedChanged">
                <MudText Typo="Typo.h6">@dto.Order</MudText>
                <MudText Typo="Typo.body1">@dto.From</MudText>
                <MudText Typo="Typo.body1">@dto.To</MudText>
                <MudButton OnClick="() => GetData(dto.Order)" Variant="Variant.Outlined" Color="Color.Tertiary">
                    GetDatesInRange
                </MudButton>
                @if (ScheduleDataDtos is not null)
                {
                    <MudSimpleTable Hover="true" Dense="true" Bordered="true">
                        <thead>

                        @if (ScheduleDataDtos.Headers != null)
                        {
                            foreach (var he in ScheduleDataDtos.Headers)
                            {
                                <MudTh>@he</MudTh>
                            }
                        }
                        </thead>
                        <tbody>
                        @if (ScheduleDataDtos.Rows != null)
                        {
                            foreach (var row in ScheduleDataDtos.Rows)
                            {
                                <MudTr>
                                    @foreach (var cell in row.Cell)
                                    {
                                        <MudTd>@cell.Value</MudTd>
                                    }
                                </MudTr>
                            }
                        }
                        </tbody>
                    </MudSimpleTable>
                }
            </MudExpansionPanel>
        }
    </MudExpansionPanels>
}

@code {

    private List<DateRangeDo>? DataDtos { get; set; }
    private TimeTableDo? ScheduleDataDtos { get; set; }
    [Inject] public required SnackbarWrappers SnackbarWrapper { get; set; }


    private async Task GetDates()
    {
        var result = await SnackbarWrapper.WrapOnErrorAsync(() => WebScrapper.GetDates("https://planzajec.uek.krakow.pl/index.php?typ=G&id=238471&okres=1"));
        DataDtos = result?.AsDisplayObject();
    }

    private async Task GetData(int order)
    {
        var result = await WebScrapper.GetDataInRange($"https://planzajec.uek.krakow.pl/index.php?typ=G&id=238471&okres={order}");
        Console.WriteLine(result);
        ScheduleDataDtos = result.AsDisplayObject();
    }

    private void ExpandedChanged(bool arg)
    {
        Console.WriteLine(arg);
        Console.WriteLine("ExpandedChanged");
    }

}